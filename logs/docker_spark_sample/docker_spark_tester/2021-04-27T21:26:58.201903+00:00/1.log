[2021-04-27 21:26:59,987] {taskinstance.py:851} INFO - Dependencies all met for <TaskInstance: docker_spark_sample.docker_spark_tester 2021-04-27T21:26:58.201903+00:00 [queued]>
[2021-04-27 21:26:59,997] {taskinstance.py:851} INFO - Dependencies all met for <TaskInstance: docker_spark_sample.docker_spark_tester 2021-04-27T21:26:58.201903+00:00 [queued]>
[2021-04-27 21:26:59,998] {taskinstance.py:1042} INFO - 
--------------------------------------------------------------------------------
[2021-04-27 21:26:59,999] {taskinstance.py:1043} INFO - Starting attempt 1 of 2
[2021-04-27 21:27:00,000] {taskinstance.py:1044} INFO - 
--------------------------------------------------------------------------------
[2021-04-27 21:27:00,015] {taskinstance.py:1063} INFO - Executing <Task(DockerOperator): docker_spark_tester> on 2021-04-27T21:26:58.201903+00:00
[2021-04-27 21:27:00,028] {standard_task_runner.py:76} INFO - Running: ['airflow', 'tasks', 'run', 'docker_spark_sample', 'docker_spark_tester', '2021-04-27T21:26:58.201903+00:00', '--job-id', '8', '--pool', 'default_pool', '--raw', '--subdir', 'DAGS_FOLDER/dockerSparkOperator.py', '--cfg-path', '/tmp/tmpp1jokekk', '--error-file', '/tmp/tmpjw49kx7z']
[2021-04-27 21:27:00,024] {standard_task_runner.py:52} INFO - Started process 59 to run task
[2021-04-27 21:27:00,030] {standard_task_runner.py:77} INFO - Job 8: Subtask docker_spark_tester
[2021-04-27 21:27:00,077] {logging_mixin.py:104} INFO - Running <TaskInstance: docker_spark_sample.docker_spark_tester 2021-04-27T21:26:58.201903+00:00 [running]> on host 7fbe4509e402
[2021-04-27 21:27:00,124] {taskinstance.py:1257} INFO - Exporting the following env vars:
AIRFLOW_CTX_DAG_EMAIL=airflow@example.com
AIRFLOW_CTX_DAG_OWNER=airflow
AIRFLOW_CTX_DAG_ID=docker_spark_sample
AIRFLOW_CTX_TASK_ID=docker_spark_tester
AIRFLOW_CTX_EXECUTION_DATE=2021-04-27T21:26:58.201903+00:00
AIRFLOW_CTX_DAG_RUN_ID=manual__2021-04-27T21:26:58.201903+00:00
[2021-04-27 21:27:00,136] {docker.py:224} INFO - Starting docker container from image kadirsahan/docker_spark_submit:latest
[2021-04-27 21:27:02,048] {docker.py:263} INFO - 21/04/27 21:27:01 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
[2021-04-27 21:27:02,628] {docker.py:263} INFO - Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties
[2021-04-27 21:27:02,641] {docker.py:263} INFO - 21/04/27 21:27:01 INFO SparkContext: Running Spark version 3.1.1
[2021-04-27 21:27:02,681] {docker.py:263} INFO - 21/04/27 21:27:01 INFO ResourceUtils: ==============================================================
[2021-04-27 21:27:02,682] {docker.py:263} INFO - 21/04/27 21:27:01 INFO ResourceUtils: No custom resources configured for spark.driver.
[2021-04-27 21:27:02,683] {docker.py:263} INFO - 21/04/27 21:27:01 INFO ResourceUtils: ==============================================================
[2021-04-27 21:27:02,683] {docker.py:263} INFO - 21/04/27 21:27:01 INFO SparkContext: Submitted application: HelloWorld
[2021-04-27 21:27:02,702] {docker.py:263} INFO - 21/04/27 21:27:01 INFO ResourceProfile: Default ResourceProfile created, executor resources: Map(cores -> name: cores, amount: 1, script: , vendor: , memory -> name: memory, amount: 1024, script: , vendor: , offHeap -> name: offHeap, amount: 0, script: , vendor: ), task resources: Map(cpus -> name: cpus, amount: 1.0)
[2021-04-27 21:27:02,718] {docker.py:263} INFO - 21/04/27 21:27:02 INFO ResourceProfile: Limiting resource is cpu
[2021-04-27 21:27:02,719] {docker.py:263} INFO - 21/04/27 21:27:02 INFO ResourceProfileManager: Added ResourceProfile id: 0
[2021-04-27 21:27:02,765] {docker.py:263} INFO - 21/04/27 21:27:02 INFO SecurityManager: Changing view acls to: root
[2021-04-27 21:27:02,766] {docker.py:263} INFO - 21/04/27 21:27:02 INFO SecurityManager: Changing modify acls to: root
[2021-04-27 21:27:02,767] {docker.py:263} INFO - 21/04/27 21:27:02 INFO SecurityManager: Changing view acls groups to:
[2021-04-27 21:27:02,768] {docker.py:263} INFO - 21/04/27 21:27:02 INFO SecurityManager: Changing modify acls groups to:
[2021-04-27 21:27:02,768] {docker.py:263} INFO - 21/04/27 21:27:02 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users  with view permissions: Set(root); groups with view permissions: Set(); users  with modify permissions: Set(root); groups with modify permissions: Set()
[2021-04-27 21:27:02,927] {docker.py:263} INFO - 21/04/27 21:27:02 INFO Utils: Successfully started service 'sparkDriver' on port 38073.
[2021-04-27 21:27:02,951] {docker.py:263} INFO - 21/04/27 21:27:02 INFO SparkEnv: Registering MapOutputTracker
[2021-04-27 21:27:02,984] {docker.py:263} INFO - 21/04/27 21:27:02 INFO SparkEnv: Registering BlockManagerMaster
[2021-04-27 21:27:03,009] {docker.py:263} INFO - 21/04/27 21:27:02 INFO BlockManagerMasterEndpoint: Using org.apache.spark.storage.DefaultTopologyMapper for getting topology information
[2021-04-27 21:27:03,010] {docker.py:263} INFO - 21/04/27 21:27:02 INFO BlockManagerMasterEndpoint: BlockManagerMasterEndpoint up
[2021-04-27 21:27:03,013] {docker.py:263} INFO - 21/04/27 21:27:02 INFO SparkEnv: Registering BlockManagerMasterHeartbeat
[2021-04-27 21:27:03,027] {docker.py:263} INFO - 21/04/27 21:27:02 INFO DiskBlockManager: Created local directory at /tmp/blockmgr-3ee4b22c-f8bf-4010-80d9-86bbcbc04796
[2021-04-27 21:27:03,052] {docker.py:263} INFO - 21/04/27 21:27:02 INFO MemoryStore: MemoryStore started with capacity 366.3 MiB
[2021-04-27 21:27:03,076] {docker.py:263} INFO - 21/04/27 21:27:02 INFO SparkEnv: Registering OutputCommitCoordinator
[2021-04-27 21:27:03,313] {docker.py:263} INFO - 21/04/27 21:27:02 INFO Utils: Successfully started service 'SparkUI' on port 4040.
[2021-04-27 21:27:03,362] {docker.py:263} INFO - 21/04/27 21:27:02 INFO SparkUI: Bound SparkUI to 0.0.0.0, and started at http://4c3e8d09a339:4040
[2021-04-27 21:27:03,613] {docker.py:263} INFO - 21/04/27 21:27:02 INFO StandaloneAppClient$ClientEndpoint: Connecting to master spark://spark-master:7077...
[2021-04-27 21:27:03,685] {docker.py:263} INFO - 21/04/27 21:27:02 INFO TransportClientFactory: Successfully created connection to spark-master/172.18.0.2:7077 after 49 ms (0 ms spent in bootstraps)
[2021-04-27 21:27:03,791] {docker.py:263} INFO - 21/04/27 21:27:03 INFO StandaloneSchedulerBackend: Connected to Spark cluster with app ID app-20210427212703-0001
[2021-04-27 21:27:03,793] {docker.py:263} INFO - 21/04/27 21:27:03 INFO StandaloneAppClient$ClientEndpoint: Executor added: app-20210427212703-0001/0 on worker-20210427211851-172.18.0.3-34897 (172.18.0.3:34897) with 2 core(s)
[2021-04-27 21:27:03,801] {docker.py:263} INFO - 21/04/27 21:27:03 INFO StandaloneSchedulerBackend: Granted executor ID app-20210427212703-0001/0 on hostPort 172.18.0.3:34897 with 2 core(s), 1024.0 MiB RAM
[2021-04-27 21:27:03,806] {docker.py:263} INFO - 21/04/27 21:27:03 INFO Utils: Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port 34141.
[2021-04-27 21:27:03,807] {docker.py:263} INFO - 21/04/27 21:27:03 INFO NettyBlockTransferService: Server created on 4c3e8d09a339:34141
[2021-04-27 21:27:03,807] {docker.py:263} INFO - 21/04/27 21:27:03 INFO BlockManager: Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy
[2021-04-27 21:27:03,835] {docker.py:263} INFO - 21/04/27 21:27:03 INFO BlockManagerMaster: Registering BlockManager BlockManagerId(driver, 4c3e8d09a339, 34141, None)
[2021-04-27 21:27:03,838] {docker.py:263} INFO - 21/04/27 21:27:03 INFO StandaloneAppClient$ClientEndpoint: Executor updated: app-20210427212703-0001/0 is now RUNNING
[2021-04-27 21:27:03,846] {docker.py:263} INFO - 21/04/27 21:27:03 INFO BlockManagerMasterEndpoint: Registering block manager 4c3e8d09a339:34141 with 366.3 MiB RAM, BlockManagerId(driver, 4c3e8d09a339, 34141, None)
[2021-04-27 21:27:03,849] {docker.py:263} INFO - 21/04/27 21:27:03 INFO BlockManagerMaster: Registered BlockManager BlockManagerId(driver, 4c3e8d09a339, 34141, None)
[2021-04-27 21:27:03,850] {docker.py:263} INFO - 21/04/27 21:27:03 INFO BlockManager: Initialized BlockManager: BlockManagerId(driver, 4c3e8d09a339, 34141, None)
[2021-04-27 21:27:04,188] {docker.py:263} INFO - 21/04/27 21:27:03 INFO StandaloneSchedulerBackend: SchedulerBackend is ready for scheduling beginning after reached minRegisteredResourcesRatio: 0.0
[2021-04-27 21:27:04,741] {docker.py:263} INFO - 21/04/27 21:27:04 INFO SharedState: Setting hive.metastore.warehouse.dir ('null') to the value of spark.sql.warehouse.dir ('file:/sparksubmit/spark-warehouse').
[2021-04-27 21:27:04,742] {docker.py:263} INFO - 21/04/27 21:27:04 INFO SharedState: Warehouse path is 'file:/sparksubmit/spark-warehouse'.
[2021-04-27 21:27:06,783] {docker.py:263} INFO - 21/04/27 21:27:06 INFO SparkContext: Starting job: collect at /sparksubmit/index.py:11
[2021-04-27 21:27:06,830] {docker.py:263} INFO - 21/04/27 21:27:06 INFO DAGScheduler: Got job 0 (collect at /sparksubmit/index.py:11) with 2 output partitions
[2021-04-27 21:27:06,831] {docker.py:263} INFO - 21/04/27 21:27:06 INFO DAGScheduler: Final stage: ResultStage 0 (collect at /sparksubmit/index.py:11)
[2021-04-27 21:27:06,832] {docker.py:263} INFO - 21/04/27 21:27:06 INFO DAGScheduler: Parents of final stage: List()
[2021-04-27 21:27:06,832] {docker.py:263} INFO - 21/04/27 21:27:06 INFO DAGScheduler: Missing parents: List()
[2021-04-27 21:27:06,844] {docker.py:263} INFO - 21/04/27 21:27:06 INFO DAGScheduler: Submitting ResultStage 0 (PythonRDD[1] at collect at /sparksubmit/index.py:11), which has no missing parents
[2021-04-27 21:27:07,008] {docker.py:263} INFO - 21/04/27 21:27:06 INFO MemoryStore: Block broadcast_0 stored as values in memory (estimated size 4.6 KiB, free 366.3 MiB)
[2021-04-27 21:27:07,105] {docker.py:263} INFO - 21/04/27 21:27:06 INFO MemoryStore: Block broadcast_0_piece0 stored as bytes in memory (estimated size 3.0 KiB, free 366.3 MiB)
[2021-04-27 21:27:07,108] {docker.py:263} INFO - 21/04/27 21:27:06 INFO BlockManagerInfo: Added broadcast_0_piece0 in memory on 4c3e8d09a339:34141 (size: 3.0 KiB, free: 366.3 MiB)
[2021-04-27 21:27:07,110] {docker.py:263} INFO - 21/04/27 21:27:06 INFO SparkContext: Created broadcast 0 from broadcast at DAGScheduler.scala:1383
[2021-04-27 21:27:07,168] {docker.py:263} INFO - 21/04/27 21:27:06 INFO DAGScheduler: Submitting 2 missing tasks from ResultStage 0 (PythonRDD[1] at collect at /sparksubmit/index.py:11) (first 15 tasks are for partitions Vector(0, 1))
[2021-04-27 21:27:07,169] {docker.py:263} INFO - 21/04/27 21:27:06 INFO TaskSchedulerImpl: Adding task set 0.0 with 2 tasks resource profile 0
[2021-04-27 21:27:07,392] {docker.py:263} INFO - 21/04/27 21:27:06 INFO CoarseGrainedSchedulerBackend$DriverEndpoint: Registered executor NettyRpcEndpointRef(spark-client://Executor) (172.18.0.3:53920) with ID 0,  ResourceProfileId 0
[2021-04-27 21:27:07,576] {docker.py:263} INFO - 21/04/27 21:27:06 INFO BlockManagerMasterEndpoint: Registering block manager 172.18.0.3:45523 with 366.3 MiB RAM, BlockManagerId(0, 172.18.0.3, 45523, None)
[2021-04-27 21:27:07,659] {docker.py:263} INFO - 21/04/27 21:27:06 INFO TaskSetManager: Starting task 0.0 in stage 0.0 (TID 0) (172.18.0.3, executor 0, partition 0, PROCESS_LOCAL, 4495 bytes) taskResourceAssignments Map()
[2021-04-27 21:27:07,672] {docker.py:263} INFO - 21/04/27 21:27:06 INFO TaskSetManager: Starting task 1.0 in stage 0.0 (TID 1) (172.18.0.3, executor 0, partition 1, PROCESS_LOCAL, 4495 bytes) taskResourceAssignments Map()
[2021-04-27 21:27:07,962] {docker.py:263} INFO - 21/04/27 21:27:07 INFO BlockManagerInfo: Added broadcast_0_piece0 in memory on 172.18.0.3:45523 (size: 3.0 KiB, free: 366.3 MiB)
[2021-04-27 21:27:08,883] {docker.py:263} INFO - 21/04/27 21:27:08 INFO TaskSetManager: Finished task 0.0 in stage 0.0 (TID 0) in 1232 ms on 172.18.0.3 (executor 0) (1/2)
[2021-04-27 21:27:08,889] {docker.py:263} INFO - 21/04/27 21:27:08 INFO PythonAccumulatorV2: Connected to AccumulatorServer at host: 127.0.0.1 port: 48287
[2021-04-27 21:27:08,899] {docker.py:263} INFO - 21/04/27 21:27:08 INFO TaskSetManager: Finished task 1.0 in stage 0.0 (TID 1) in 1228 ms on 172.18.0.3 (executor 0) (2/2)
[2021-04-27 21:27:08,904] {docker.py:263} INFO - 21/04/27 21:27:08 INFO DAGScheduler: ResultStage 0 (collect at /sparksubmit/index.py:11) finished in 2.025 s
[2021-04-27 21:27:08,907] {docker.py:263} INFO - 21/04/27 21:27:08 INFO DAGScheduler: Job 0 is finished. Cancelling potential speculative or zombie tasks for this job
[2021-04-27 21:27:08,917] {docker.py:263} INFO - 21/04/27 21:27:08 INFO TaskSchedulerImpl: Removed TaskSet 0.0, whose tasks have all completed, from pool
[2021-04-27 21:27:08,918] {docker.py:263} INFO - 21/04/27 21:27:08 INFO TaskSchedulerImpl: Killing all running tasks in stage 0: Stage finished
[2021-04-27 21:27:08,920] {docker.py:263} INFO - 21/04/27 21:27:08 INFO DAGScheduler: Job 0 finished: collect at /sparksubmit/index.py:11, took 2.134040 s
[2021-04-27 21:27:08,940] {docker.py:263} INFO - [1, 4, 9, 16]
[2021-04-27 21:27:08,957] {docker.py:263} INFO - 21/04/27 21:27:08 INFO SparkContext: Invoking stop() from shutdown hook
[2021-04-27 21:27:08,967] {docker.py:263} INFO - 21/04/27 21:27:08 INFO SparkUI: Stopped Spark web UI at http://4c3e8d09a339:4040
[2021-04-27 21:27:08,970] {docker.py:263} INFO - 21/04/27 21:27:08 INFO StandaloneSchedulerBackend: Shutting down all executors
[2021-04-27 21:27:08,971] {docker.py:263} INFO - 21/04/27 21:27:08 INFO CoarseGrainedSchedulerBackend$DriverEndpoint: Asking each executor to shut down
[2021-04-27 21:27:09,000] {docker.py:263} INFO - 21/04/27 21:27:08 INFO MapOutputTrackerMasterEndpoint: MapOutputTrackerMasterEndpoint stopped!
[2021-04-27 21:27:09,012] {docker.py:263} INFO - 21/04/27 21:27:08 INFO MemoryStore: MemoryStore cleared
[2021-04-27 21:27:09,013] {docker.py:263} INFO - 21/04/27 21:27:08 INFO BlockManager: BlockManager stopped
[2021-04-27 21:27:09,026] {docker.py:263} INFO - 21/04/27 21:27:08 INFO BlockManagerMaster: BlockManagerMaster stopped
[2021-04-27 21:27:09,032] {docker.py:263} INFO - 21/04/27 21:27:08 INFO OutputCommitCoordinator$OutputCommitCoordinatorEndpoint: OutputCommitCoordinator stopped!
[2021-04-27 21:27:09,057] {docker.py:263} INFO - 21/04/27 21:27:08 INFO SparkContext: Successfully stopped SparkContext
[2021-04-27 21:27:09,058] {docker.py:263} INFO - 21/04/27 21:27:08 INFO ShutdownHookManager: Shutdown hook called
[2021-04-27 21:27:09,059] {docker.py:263} INFO - 21/04/27 21:27:08 INFO ShutdownHookManager: Deleting directory /tmp/spark-81750817-483b-4e0f-a921-d095992023ad
[2021-04-27 21:27:09,063] {docker.py:263} INFO - 21/04/27 21:27:08 INFO ShutdownHookManager: Deleting directory /tmp/spark-6662bc43-e91c-4668-8149-b41bb4cdc476
[2021-04-27 21:27:09,070] {docker.py:263} INFO - 21/04/27 21:27:08 INFO ShutdownHookManager: Deleting directory /tmp/spark-6662bc43-e91c-4668-8149-b41bb4cdc476/pyspark-cc216f28-475f-4c34-aba8-533c04c084c2
[2021-04-27 21:27:09,303] {taskinstance.py:1166} INFO - Marking task as SUCCESS. dag_id=docker_spark_sample, task_id=docker_spark_tester, execution_date=20210427T212658, start_date=20210427T212659, end_date=20210427T212709
[2021-04-27 21:27:09,331] {taskinstance.py:1220} INFO - 1 downstream tasks scheduled from follow-on schedule check
[2021-04-27 21:27:09,341] {local_task_job.py:146} INFO - Task exited with return code 0
